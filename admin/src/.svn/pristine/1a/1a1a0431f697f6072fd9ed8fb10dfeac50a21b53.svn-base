<template>
    <div></div>
</template>
<script>
import Vue from 'vue'

export default {
    //外部调用该组件时，允许接收的参数
    props: ['browse_button', 'height', 'token'],
    data: function() {
        return {
            //图片上传接口
            uploadImgUrl: this.API_ROOT + '/api/baoming/uploadimg',
            //上传表单数据
            form: {
                title: '',
                is_tuijian: '1',
                miaoshu: '',
                keywords: '',
                content: '',
                add_time: ''
            },
            //时间选择
            time: '',
            //验证器
            rules: {
                title: [{
                    required: true,
                    message: '请填写视频名称！',
                    trigger: 'blur'
                }]
            },
            //按钮loading
            loadingbiao: false
        }
    },
    methods: {


    },
    mounted() {
        var uploader = Qiniu.uploader({
            runtimes: 'html5,flash,html4', // 上传模式，依次退化
            browse_button: 'selectVideo', // 上传选择的点选按钮，必需

            // uptoken_url: 'http://localhost/yiiserver/web/index.php/video/uptoken', // Ajax请求uptoken的Url，强烈建议设置（服务端提供）
            uptoken: 'CtYytsXlpV7YHcFv6KoncEPK0tkGFPqnnb_c4m7i:nZx7VkpkQ7V_eTc3XAvw0psDwb0=:eyJzY29wZSI6InFjY2oiLCJkZWFkbGluZSI6MTQ5ODczMzYwMiwidXBIb3N0cyI6WyJodHRwOlwvXC91cC5xaW5pdS5jb20iLCJodHRwOlwvXC91cGxvYWQucWluaXUuY29tIiwiLUggdXAucWluaXUuY29tIGh0dHA6XC9cLzE4My4xMzYuMTM5LjE2Il19', // uptoken 是上传凭证，由其他程序生成
            get_new_uptoken: false, // 设置上传文件的时候是否每次都重新获取新的uptoken
            // downtoken_url: '/downtoken',
            // Ajax请求downToken的Url，私有空间时使用，JS-SDK将向该地址POST文件的key和domain，服务端返回的JSON必须包含url字段，url值为该文件的下载地址
            unique_names: true, // 默认false，key为文件名。若开启该选项，JS-SDK会为每个文件自动生成key（文件名）
            // save_key: true, // 默认false。若在服务端生成uptoken的上传策略中指定了save_key，则开启，SDK在前端将不对key进行任何处理
            domain: 'http://osaeqd83t.bkt.clouddn.com/', // bucket域名，下载资源时用到，必需
            container: 'videoContainer', // 上传区域DOM ID，默认是browser_button的父元素
            max_file_size: '100mb', // 最大文件体积限制
            flash_swf_url: '../plupload/Moxie.swf', //引入flash，相对路径
            max_retries: 3, // 上传失败最大重试次数
            dragdrop: true, // 开启可拖曳上传
            drop_element: 'videoContainer', // 拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
            chunk_size: '4mb', // 分块上传时，每块的体积
            auto_start: true, // 选择文件后自动上传，若关闭需要自己绑定事件触发上传
            //x_vars : {
            //    查看自定义变量
            //    'time' : function(up,file) {
            //        var time = (new Date()).getTime();
            // do something with 'time'
            //        return time;
            //    },
            //    'size' : function(up,file) {
            //        var size = file.size;
            // do something with 'size'
            //        return size;
            //    }
            //},


            init: {
                'FilesAdded': function(up, files) {
                    plupload.each(files, function(file) {
                        // 文件添加进队列后，处理相关的事情
                        // console.log(file)
                    });
                },
                'BeforeUpload': function(up, file) {
                    // 每个文件上传前，处理相关的事情
                },
                'UploadProgress': function(up, file) {
                    // 每个文件上传时，处理相关的事情
                    // console.log('pro', up, file)
                },
                'FileUploaded': function(up, file, info) {
                    //返回上传成功后的文件路径
                    var domain = up.getOption('domain')
                    var file_key = eval("(" + info + ")").key

                    //上传成功后，完整的文件路径
                    var file_url = domain + file_key
                    console.log(file_url)
                },
                'Error': function(up, err, errTip) {
                    //上传出错时，处理相关的事情
                },
                'UploadComplete': function() {
                    //队列文件处理完毕后，处理相关的事情
                },
                'Key': function(up, file) {
                    // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
                    // 该配置必须要在unique_names: false，save_key: false时才生效
                    var key = "";
                    // do something with key here
                    return key
                }
            }
        })
    }
}
</script>
