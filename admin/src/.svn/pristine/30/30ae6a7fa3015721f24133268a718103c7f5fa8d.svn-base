<template>
    <el-card class="box-card" v-loading="loading" element-loading-text="拼命加载中">
        <div slot="header" class="clearfix">
            <el-row>
                <el-col :md="6" :sm="6" class="pad-rgt">
                    <el-input placeholder="检索：标题 " icon="search" @change="KeysChange" v-model="keys">
                    </el-input>
                </el-col>
                <el-col :md="6" :sm="6" class="pad-rgt">
                    <el-select v-model="source" clearable @change="zixSelect" placeholder="不限资讯来源" style="width:100%;">
                        <el-option v-for="(item,index) in news_source_data" :key="index" :label="item" :value="item">
                        </el-option>
                    </el-select>
                </el-col>
                <el-col :md="12" :sm="12" class="text-right">
                    <el-button-group v-if="authCheck(6)&&authCheck(9)">
                        <el-button type="primary" icon="plus" class="daochu_xiangmu" @click="addNews">
                            <span v-if="tid==1">添加资讯</span>
                            <span v-if="tid==2">添加创谷信息</span>
                            <span v-if="tid==3">添加创说信息</span>
                        </el-button>
                        <el-button type="danger" icon="delete" class="daochu_xiangmu" @click="handleDelete('')">批量删除</el-button>
                    </el-button-group>
                    <div v-else>
                        <el-button type="primary" v-if="authCheck(6)" icon="plus" class="daochu_xiangmu" @click="addNews">添加资讯</el-button>
                        <el-button type="danger" v-if="authCheck(9)" icon="delete" class="daochu_xiangmu" @click="handleDelete('')">批量删除</el-button>
                    </div>
                </el-col>
            </el-row>
        </div>
        <div v-bind:style="{ 'min-height': _PageHeight+'px'}">
            <el-table :data="tableData" stripe highlight-current-row border style="width: 100%" @selection-change="handleSelectionChange" @sort-change="handleSort" :default-sort="{prop: 'fabu_time', order: 'descending'}">
                <el-table-column type="selection" width="50">
                </el-table-column>
                <el-table-column prop="title" min-width="250" show-overflow-tooltip label="资讯标题">
                    <template scope="scope">
                        <div>
                            <span v-if="scope.row.is_toutiao == '2'" class="badge badge-danger">头条</span>
                            <a href="#" target="_Blank" class="text-primary">{{scope.row.title}}</a>
                        </div>
                    </template>
                </el-table-column>
                <el-table-column min-width="100" label="作者" prop="author_name" v-if="group=='1'||group=='2'"></el-table-column>
                <el-table-column prop="read_count" min-width="100" label="阅读次数" sortable="custom" show-overflow-tooltip></el-table-column>
                </el-table-column>
                <el-table-column min-width="150" label="来源" show-overflow-tooltip prop="source"></el-table-column>
                <el-table-column prop="fabu_time" label="发布时间" width="150" sortable="custom">
                </el-table-column>
                <el-table-column label="操作" fixed="right" width="150" v-if="authCheck(9)||authCheck(7)">
                    <template scope="scope">
                        <el-button size="mini" v-if="authCheck(7)" type='primary' @click="handleEdit(scope.row.id)">
                            <i class="el-icon-edit mini"></i> 编辑
                        </el-button>
                        <el-button size="mini" v-if="authCheck(9)" type="danger" @click="handleDelete(scope.row.id)">
                            <i class="el-icon-delete"></i> 删除
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>
        </div>
        <div class="clearfix">
            <template>
                <el-pagination class="margin-top-20 text-right" @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="_pageSizes" :page-size="_pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total">
                </el-pagination>
            </template>
        </div>
    </el-card>
</template>
<script>
//导入vuex辅助函数
import {
    mapState
} from 'vuex'
export default {
    activated: function() {

    },
    data() {
        return {
            total: 0,
            loading: false,
            currentPage: 1,
            keys: "",
            tableData: [],
            multipleSelection: [],
            _order: '',
            _sort: '',
            //资讯来源筛选
            source: '',
            tid: this.$route.meta.tid
        }
    },
    watch: {
        '$route.meta.tid': function(newValue, oldValue) {
            this._order = 'fabu_time';
            this._sort = 'desc';
            if (newValue == '' || !newValue) return
            this.tid = this.$route.meta.tid
            this.getData()
        }
    },
    methods: {
        KeysChange(val) {
            this.keys = val.replace(/[\'\"]/g, '')
            this.getData();
        },
        //排序
        handleSort(val) {
            if (val.prop == null || !val.prop) {
                this._order = "fabu_time";
                this._sort = 'desc';
            } else {
                this._order = val.prop
                if (val.order == "ascending") {
                    this._sort = "asc"
                } else if (val.order == "descending") {
                    this._sort = "desc"
                }
            }
            this.getData();
        },
        //资讯下拉框
        zixSelect(val) {
            this.source = val;
            this.getData()
        },
        //多选框
        handleSelectionChange(val) {
            this.multipleSelection = val
        },
        //跳转至添加新闻页面
        addNews() {
            if (this.tid == 1) {
                this.$router.push({
                    name: 'addNews'
                })
            } else if (this.tid == 2) {
                this.$router.push({
                    name: 'cgadd'
                })
            } else {
                this.$router.push({
                    name: 'csadd'
                })
            }

        },
        //跳编辑页面，开发时注册此处先验证一下id必须为大于0的整形后再执行跳转，否则抛出非法参数请求的消息
        handleEdit(id) {
            if (this.tid == 1) {
                this.$router.push({
                    name: 'editNews',
                    params: {
                        id: id
                    }
                })
            } else if (this.tid == 2) {
                this.$router.push({
                    name: 'cgedit',
                    params: {
                        id: id
                    }
                })
            } else {
                this.$router.push({
                    name: 'csedit',
                    params: {
                        id: id
                    }
                })
            }

        },
        //删除数据记录
        handleDelete(id) {
            //判断是批量删除还是单个删除
            if (!id) {
                if (this.multipleSelection.length == 0) {
                    this.$message({
                        type: 'warning',
                        message: '请选择需要删除的内容'
                    });
                    return
                }
            } else {
                //单个删除数据
                this.multipleSelection = id
            }
            this.$confirm('删除后不可恢复，确定要删除吗？', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
            }).then(() => {
                //批量删除数据
                if (!id) {
                    for (var i in this.multipleSelection) {
                        this.multipleSelection[i] = this.multipleSelection[i].id
                    }
                }
                this.axios({
                    method: 'post',
                    url: this.API_ROOT + '/api/news/delete',
                    data: {
                        id: this.multipleSelection
                    },
                    headers: this.$store.getters.Request_Head
                }).then((response) => {
                    if (response.data.status.code !== 1001) {
                        this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                    } else {
                        this.$message({
                            message: '数据删除成功！',
                            type: 'success'
                        });
                        this.multipleSelection = []
                        this.getData()
                    }
                }, (error) => {
                    this.$emit('API-ERR');
                })
            }).catch(() => {

            });
        },
        //一页多少条
        handleSizeChange(val) {
            this.$store.commit('setPageSize', val);
            this.getData();
        },
        //页码
        handleCurrentChange(val) {
            this.currentPage = val;
            this.getData();
        },
        getData() {
            //请求数据
            this.loading = true
            this.axios({
                method: 'post',
                url: this.API_ROOT + '/api/news',
                data: {
                    _order: this._order,
                    _sort: this._sort,
                    keys: this.keys,
                    page: this.currentPage,
                    listRows: this._pageSize,
                    tid: this.tid,
                    source: this.source
                },
                headers: this.$store.getters.Request_Head
            }).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                } else {
                    this.tableData = response.data.data
                    this.total = response.data.count
                }
                this.loading = false
            }, (error) => {
                this.loading = false
                this.$emit('API-ERR');
            })

        },
        //打开发布通知公告页面
        pushNotice() {
            this.$router.push({
                name: 'pushNotice'
            })
        }
    },
    computed: mapState({
        news_source_data: state => state.news_source_type,
        _pageSize: state => state.pageSize,
        _pageSizes: state => state.pageSizes,
        group: state => state.userinfo.userinfo.group
    }),
}
</script>
