<template>
    <el-card class="box-card" v-loading="loading" element-loading-text="拼命加载中">
        <div slot="header" class="clearfix">
            <el-row>
                <el-col :span="24" class="text-right">
                    <goBack></goBack>
                </el-col>
            </el-row>
        </div>
        <el-row :style="{ 'min-height': _PageHeight+'px'}">
            <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
                <el-row>
                    <el-col :md="14">
                        <el-form-item prop="title" label="标题名称">
                            <el-input v-model="ruleForm.title" placeholder="请填写标题名称"></el-input>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col>
                        <el-form-item prop="daodu" label="文章导读">
                            <el-input type="textarea" v-model="ruleForm.daodu" :autosize="{ minRows: 2, maxRows: 4}" placeholder="请填写文章导读"></el-input>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-form-item prop="source" label="文章来源">
                    <el-col :md="9">
                        <el-select v-model="ruleForm.source" multiple filterable clearable allow-create placeholder="请选择文章来源 " style="width:100%">
                            <el-option v-for="(item,index) in wenzhang_data" :key="index" :label="item" :value="item">
                            </el-option>
                        </el-select>
                    </el-col>
                </el-form-item>
                <el-form-item label="文章图片" required>
                    <el-col :md="12">
                        <QN_upload max_file_size="500kb" keyPrefix="image" type="drag" :filters="filters" @Callback-UploadProgress="CB_UploadProgress" @Callback-GetFileUrl="CB_GetFileUrl" @Callback-Error="CB_Error"></QN_upload>
                        <div class="el-upload__tip" style="line-height:25px">
                            比例为4 : 3 ，上传jpg/png/bmp格式图片，大小不能超过500KB
                        </div>
                    </el-col>
                    <el-col :md="12">
                        <el-progress type="circle" :percentage="qn_upload.img_upload_progress" :status='qn_upload.img_upload_status' v-if="qn_upload.img_upload_progress>0&&qn_upload.img_upload_progress<100"></el-progress>
                        <span v-else-if="ruleForm.img" class="newsImage">
                            <img :src="ruleForm.img" alt="" class="thumbnail" style="max-width:255px;max-height:200px">
                            <span class="el-icon-circle-cross"  @click="rmImage">
                            </span>
                        </span>
                    </el-col>
                </el-form-item>
                <el-form-item label="文章内容" prop="content">
                    <vueEditor :editContent="ruleForm.content" :height="200" @Callback-Content="CB_Content"></vueEditor>
                </el-form-item>
                <el-form-item label="文章归属">
                    <!--                     <el-select v-model="ruleForm.author_name" @change="zixSelect"  filterable clearable allow-create placeholder="请填写文章归属" style="width:360px;">
                        <el-option v-for="item in guishudata" :key="item.id" :label="item" :value="item">
                        </el-option>
                    </el-select> -->
                    <div class="block">
                        <el-cascader placeholder="请选择文章归属" clearable :show-all-levels="false" v-model="author_id" :options="options" filterable style="width:360px;" @change="handleChange"></el-cascader>
                    </div>
                </el-form-item>
                <el-form-item>
                    <el-button size="large" type="primary" v-if="authCheck(133)||authCheck(135)" @click="submitForm('ruleForm')" :loading="loadingbiao"> 保存文章信息 </el-button>
                </el-form-item>
            </el-form>
        </el-row>
    </el-card>
</template>
<script>
import Vue from 'vue'
import QN_upload from '@/components/qiniu-upload'
//导入vuex辅助函数
import {
    mapState
} from 'vuex'
//导入编辑器组件（共用）
import vueEditor from '@/components/editor'
//返回上一页共用组件
import goBack from '@/components/goBack'
export default {
    activated: function() {
        this.getGuishu()
        if (this.$route.params.id) {
            this.getRead();
        }
    },
    deactivated() {
        this.$refs['ruleForm'].resetFields();
        this.ruleForm = {
            title: '',
            daodu: '',
            source: [],
            content: '',
            author_id: '',
            img: ''
        }
        this.author_id = []
    },
    data() {
        return {
            author_id: [],
            lymaxlength: 50,
            jsmaxlength: 80,
            loadingbiao: false,
            guishudata: '',
            options: [],
            ruleForm: {
                title: '',
                source: [],
                content: '',
                author_id: [],
                daodu: '',
                img: ''
            },
            qn_upload: {
                img_upload_progress: 0,
                img_upload_status: ''
            },
            loading: false,
            rules: {
                title: [{
                    required: true,
                    message: '请填写标题！',
                    trigger: 'blur'
                }],
                daodu: [{
                    required: true,
                    message: '请填写文章导读！',
                    trigger: 'blur'
                }],
                source: [{
                    type: 'array',
                    required: true,
                    message: '请填写文章来源！',
                    trigger: 'change'
                }],
                content: [{
                    required: true,
                    message: '请填写文章内容',
                    trigger: 'blur'
                }]
            },
            filters: {
                mime_types: [{
                    title: "Image files",
                    extensions: "jpg,png,bmp,jpeg"
                }]
            }
        }

    },
    methods: {
        //保存项目
        submitForm(formName) {
            //设置默认主图
            this.loadingbiao = true;
            this.$refs[formName].validate((valid) => {
                if (valid) {
                    this.setData();
                } else {
                    this.loadingbiao = false
                    return false;
                }
            });
        },
        //点击删除图片
        rmImage() {
            this.$confirm('确定要移除图片吗？', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
            }).then(() => {
                this.$message({
                    type: 'success',
                    message: '删除成功!'
                });
                this.ruleForm.img = ''
            }).catch(() => {});
        },
        //文章归属
        handleChange(val) {
            this.author_id = val
        },
        //给form赋值
        CB_Content(content, token) {
            this.ruleForm.content = content
        },
        //读取所有文章归属
        getGuishu() {
            this.axios({
                method: 'post',
                url: this.API_ROOT + '/api/news/author_name',
                headers: this.$store.getters.Request_Head
            }).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                    if (response.data.status.code == 1004 || response.data.status.code == 1006) {
                        this.lockout()
                    }
                } else {
                    this.options = response.data.data
                }
                this.loading = false
            }, (error) => {
                this.$emit('API-ERR');
                this.loading = false
            });
        },
        /*
         *数据的处理
         *
         */
        //提交数据
        setData() {
            if (this.author_id.length == 1 || !this.author_id) {
                this.$message.error('请选择文章归属')
                this.loadingbiao = false
                return
            }
            if (this.ruleForm.img == '') {
                this.$message.error('请上传文章图片')
                this.loadingbiao = false
                return
            }
            var url;
            this.ruleForm.author_id = this.author_id[1]
            this.ruleForm.img = this.ruleForm.img.split("!")[0]
            if (this.$route.params.id) {
                this.ruleForm.id = this.$route.params.id
                url = this.API_ROOT + '/api/news/update';
            } else {
                url = this.API_ROOT + '/api/news/insert';
            }
            this.ruleForm.tid = 4
            this.ruleForm.is_toutiao = 1
            this.ruleForm.source = this.ruleForm.source.join(",")
            let mayTime = new Date()
            this.ruleForm.fabu_time = mayTime.toLocaleString().replace(/\//g, '-').split(' ')[0] + ' ' + mayTime.getHours() + ':' + mayTime.getMinutes()
            this.axios({
                method: 'post',
                url: url,
                data: this.ruleForm,
                headers: this.$store.getters.Request_Head
            }).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                    if (response.data.status.code == 1004 || response.data.status.code == 1006) {
                        this.lockout()
                    }
                } else {
                    this.$router.go(-1);
                    this.$message.success('数据保存成功');
                };
                this.loadingbiao = false
            }, (error) => {
                this.loadingbiao = false
                this.$emit('API-ERR')
            });
        },
        //获取ruleForm数据
        getRead() {
            this.loading = true
            this.axios({
                method: 'post',
                _order: this._order,
                _sort: this._sort,
                url: this.API_ROOT + '/api/news/read',
                data: {
                    id: this.$route.params.id,
                    tid: 4
                },
                headers: this.$store.getters.Request_Head
            }).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                    if (response.data.status.code == 1004 || response.data.status.code == 1006) {
                        this.lockout()
                    }
                } else {
                    this.ruleForm = response.data.data;
                    this.author_id = response.data.data.author_id
                    delete this.ruleForm.author_name
                    delete this.ruleForm.add_time;
                    this.ruleForm.source = response.data.data.source.split(",")
                }
                this.loading = false
            }, (error) => {
                this.$emit('API-ERR');
                this.loading = false
            });
        },
        /**
         * [回调处理七牛上传相关数据]
         * 其他更多回调方法参考 七牛组件
         */
        //文件上传过程，主要用于展现上传进度
        CB_UploadProgress(file) {
            this.qn_upload.img_upload_status = ''
            this.qn_upload.img_upload_progress = file.percent
            if (file.percent == 100) {
                this.qn_upload.img_upload_status = 'success'
            }
        },
        //获取文件上传成功后返回的文件路径
        CB_GetFileUrl(file) {
            this.ruleForm.img = file.split('!')[0]
            this.$message({
                type: 'success',
                message: '图片上传成功'
            })
        },
        //获取上传错误信息
        CB_Error(err, info) {
            this.qn_upload.img_upload_status = 'exception'
            if (err.code == -600) {
                this.$message({
                    message: '图片最大上传大小不能超过500KB！',
                    type: 'warning'
                });
            } else {
                this.$message({
                    message: '图片上传错误！',
                    type: 'warning'
                });
            }
        }
    },
    computed: mapState({
        wenzhang_data: state => state.news_source_type
    }),
    //注意别忘记挂载组件
    components: {
        vueEditor,
        goBack,
        QN_upload
    }
}
</script>
<style>
.newsImage {
    position: relative;
    display: block;
    max-width: 255px;
    max-height: 200px
}

.newsImage>span {
    background: white;
    position: absolute;
    cursor: pointer;
    right: 0px;
}

.newsImage>span:hover {
    color: #FF4949;
}

.newsImage img {
    position: absolute;
}

.newsImage img:hover {
    cursor: pointer;
}
</style>
