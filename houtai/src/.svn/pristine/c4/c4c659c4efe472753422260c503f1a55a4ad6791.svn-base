import Vue from 'vue'
import Router from 'vue-router'
import store from '@/store.js'


/**======================= 开始引用相关页面组件 ==========================*/

//我的面板，默认主页
import Page404 from '@/page/404'
import Layout from '@/page/public/layout'
import Dashboard from '@/page/Dashboard'

//资讯管理
import News_index from '@/page/news/index'
import News_add from '@/page/news/add'

//专题管理
import Zhuanti_index from '@/page/zhuanti/index'
import Zhuanti_add from '@/page/zhuanti/add'

//智库管理
import Zhiku_renwu_index from '@/page/zhiku/renwu'

//视频管理
import Videos_index from '@/page/videos/index'
import Videos_add from '@/page/videos/add'


//友情链接管理
import Links_index from '@/page/links/index'
import Links_add from '@/page/links/add'


//通知公告
import Notice_index from '@/page/notice/index'
import pushNotice from '@/page/notice/add'

//角色组管理
import users from '@/page/system/users'
import rules from '@/page/system/rules'

//登录
import Login from '@/page/public/login'
import LoginJump from '@/page/public/login-jump'

//字典表
import Category from '@/page/system/category'

//导航菜单管理
import Navigation from '@/page/system/index'

//操作日志
import Log from '@/page/log/log'

/**======================= 结束引用相关页面组件 ==========================*/


Vue.use(Router)

const router = new Router({
    //设置全局路由点击之后添加的类名
    linkActiveClass: 'active-link',
    mode: 'history',
    //配置路由所在项目中的子目录，默认为“/”
    // base: '/tuim/admin/',
    routes: [{
        //当无法找到匹配的路由时，显示 404
        path: '*',
        meta: { pagename: '404 错误！' },
        component: Page404,
    }, {
        //默认重定向至“我的面板”页面
        path: '/',
        redirect: { name: 'home' }
    }, {
        //主界面布局路由
        name: 'app',
        path: '/',
        meta: { pagename: '主页' },
        component: Layout,
        children: [{
            name: 'home',
            path: 'Dashboard',
            meta: { pagename: '我的面板' },
            component: Dashboard
        }, {
            //新闻资讯管理
            name: 'news',
            meta: { pagename: '新闻资讯管理' },
            path: 'news',
            component: News_index
        }, {
            //编辑资讯信息
            name: 'editNews',
            meta: { pagename: '编辑资讯信息' },
            path: 'news-edit-:id',
            component: News_add
        }, {
            //添加资讯信息
            name: 'addNews',
            meta: { pagename: '添加新闻资讯' },
            path: 'news-add',
            component: News_add
        }, {
            //精彩专题管理
            name: 'zhuanti',
            meta: { pagename: '精彩专题管理' },
            path: 'zhuanti',
            component: Zhuanti_index
        }, {
            //添加专题
            name: 'addZhuanti',
            meta: { pagename: '添加精彩专题' },
            path: 'zhuanti-add',
            component: Zhuanti_add
        }, {
            //编辑专题
            name: 'editZhuanti',
            meta: { pagename: '编辑精彩专题' },
            path: 'zhuanti-edit-:id',
            component: Zhuanti_add
        }, {
            //智库人物管理
            name: 'zhiku',
            meta: { pagename: '智库信息管理' },
            path: 'zhiku',
            component: Zhiku_renwu_index
        }, {
            //视频信息管理
            name: 'videos',
            meta: { pagename: '视频信息管理' },
            path: 'videos',
            component: Videos_index
        }, {
            //添加视频
            name: 'addVideo',
            meta: { pagename: '添加视频信息' },
            path: 'video-add',
            component: Videos_add
        }, {
            //编辑视频
            name: 'editVideo',
            meta: { pagename: '编辑视频信息' },
            path: 'video-edit-:id',
            component: Videos_add
        }, {
            //友情链接管理
            name: 'links',
            meta: { pagename: '友情链接管理' },
            path: 'links',
            component: Links_index
        }, {
            //添加链接
            name: 'addLinks',
            meta: { pagename: '添加友情链接' },
            path: 'links-add',
            component: Links_add
        }, {
            //编辑友情链接
            name: 'editLinks',
            meta: { pagename: '编辑友情链接' },
            path: 'links-edit:id',
            component: Links_add
        }, {
            //通知公告管理
            name: 'notice',
            meta: { pagename: '通知公告管理' },
            path: 'notice',
            component: Notice_index
        }, {
            //发布通知公告管理
            name: 'pushNotice',
            meta: { pagename: '发布通知公告' },
            path: 'notice-add',
            component: pushNotice
        }, {
            //编辑通知公告管理
            name: 'editNotice',
            meta: { pagename: '编辑通知公告' },
            path: 'notice-edit-:id',
            component: pushNotice
        }, {
            //角色组管理
            name: 'rules',
            path: 'rules',
            meta: { pagename: '角色组管理' },
            component: rules
        }, {
            //导航菜单管理
            name: 'navigation',
            path: 'navigation',
            meta: { pagename: '导航菜单管理' },
            component: Navigation
        }, {
            //字典表
            name: 'category',
            path: 'category',
            meta: { pagename: '字典表管理' },
            component: Category
        }, {
            //用户信息管理
            name: 'users',
            path: 'system-users-:id',
            meta: { pagename: '成员管理' },
            component: users
        }, {
            //操作日志
            name: 'log',
            path: 'log',
            meta: { pagename: '操作日志' },
            component: Log
        }]
    }, {
        //登录
        name: 'login',
        meta: { pagename: '用户登录' },
        path: '/login',
        component: Login
    }, {
        //主系统切换到子系统后的中转页面
        meta: { pagename: '用户登录跳转' },
        path: '/jump',
        component: LoginJump
    }],
    //当开启history模式时，此项有效，实现返回上一个页面时默认将滚动条定位到原位置
    scrollBehavior(to, from, savedPosition) {
        if (savedPosition) {
            return savedPosition
        } else {
            return { x: 0, y: 0 }
        }
    }
})

//检测token是否存在，否则退回登录
router.beforeEach((to, from, next) => {
    if (to.name !== 'login' && !store.state.userinfo.userinfo.token) {
        //判断当前运行环境模式，如果是开发环境则跳转至本系统登录页面，否则跳转至配置的服务端统一入口
        if (process.env.NODE_ENV == 'development') {
            next('login')
        } else {
            window.location.href = process.env.TMPT_ROOT
        }
    } else {
        next();
    }
})

export default router
