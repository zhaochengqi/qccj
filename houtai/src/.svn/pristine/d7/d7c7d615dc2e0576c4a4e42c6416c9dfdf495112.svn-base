<template>
    <el-card class="box-card" v-loading="loading" element-loading-text="拼命加载中">
        <div slot="header" class="clearfix">
            <el-row>
                <el-col :md="8">
                    <el-input placeholder="检索：学号、姓名、课程代码、课程名称" icon="search" v-model="keys">
                    </el-input>
                </el-col>
                <el-col :md="16" class="text-right">
                    <el-button-group>
                        <el-button type="primary" icon="upload2" @click="setData">导入成绩</el-button>
                        <el-button type="danger" icon="delete" @click="SelectDelete">批量删除</el-button>
                        <el-button type="warning" id="search" icon="arrow-down" @click="SearchMore()"></el-button>
                    </el-button-group>
                </el-col>
            </el-row>
            <el-row class="pad-top" :class="{hidden:isHidden}">
                <el-col :md="5" class="pad-rgt">
                    <el-select v-model="nianji" placeholder="不限学生年级" clearable @change="selectNianji" style="width:100%">
                        <el-option v-for="nj in nianji_data" :label="nj.title" :value="nj.id" :key="nj.id">
                        </el-option>
                    </el-select>
                </el-col>
                <el-col :md="5" class="pad-rgt">
                    <el-select v-model="xk_class_id" placeholder="不限课程类别" clearable @change="selectXiuke" style="width:100%">
                        <el-option v-for="xk in xk_class_data" :label="xk.title" :value="xk.id" :key="xk.id">
                        </el-option>
                    </el-select>
                </el-col>
                <el-col :md="5">
                    <el-select class="pad-rgt" v-model="kequn" placeholder="不限专业课群" clearable @change="selectKequn" style="width:100%">
                        <el-option v-for="kq in kequn_data" :label="kq.title" :value="kq.id" :key="kq.id">
                        </el-option>
                    </el-select>
                </el-col>
                <el-col :md="4">
                    <el-select placeholder="不限成绩" clearable @change="selectJige" v-model="searchJige" style="width:100%;">
                        <el-option v-for="(item,index) in arrjige" :key="index" :label="item.label" :value="item.value"></el-option>
                    </el-select>
                </el-col>
            </el-row>
        </div>
        <div v-bind:style="{ 'min-height': _PageHeight+'px'}">
            <el-table :data="tableData" stripe highlight-current-row border style="width: 100%" @selection-change="handleSelectionChange" @sort-change="handleSort">
                <el-table-column type="selection" width="50" fixed></el-table-column>
                <el-table-column width="80" prop="xm" label="姓名" fixed></el-table-column>
                <el-table-column width="80" prop="xh" label="学号" sortable="custom"></el-table-column>
                <el-table-column width="70" prop="xnj" label="年级"></el-table-column>
                <el-table-column width="70" label="学期">
                    <template scope="scope">
                        第{{scope.row.xq}}学期
                    </template>
                </el-table-column>
                <el-table-column min-width="180" prop="kcmc" label="课程名称" show-overflow-tooltip></el-table-column>
                <el-table-column width="100" prop="kcdm" label="课程代码"></el-table-column>
                <el-table-column min-width="180" prop="kequn_title" label="专业课群" show-overflow-tooltip></el-table-column>
                <el-table-column width="120" prop="kc_type" label="课程类型"></el-table-column>
                <el-table-column width="80" label="修课类型">
                    <template scope="scope">
                        <span v-if="scope.row.is_xiu==1">选修</span>
                        <span v-if="scope.row.is_xiu==2">必修</span>
                        <span v-if="scope.row.is_xiu==3">实践环节</span>
                    </template>
                </el-table-column>
                <el-table-column prop="xf" label="学分" width="50"></el-table-column>
                <el-table-column width="100" prop="jsmc" label="教师姓名"></el-table-column>
                <el-table-column width="80" label="成绩" fixed="right">
                    <template scope="scope">
                        {{scope.row.cj}}
                        <el-tooltip class="item" effect="dark" placement="left" v-if="scope.row.is_tihuan == '2'">
                            <div slot="content">
                                <p>该成绩为学分认定成绩</p>
                                <p>原课号：{{scope.row.old_kcdm}}</p>
                                <p>原课程：{{scope.row.old_kcmc}}</p>
                            </div>
                            <span class="text-danger">（替）</span>
                        </el-tooltip>
                    </template>
                </el-table-column>
                <el-table-column fixed="right" label="操作" width="150">
                    <template scope="scope">
                        <el-button size="mini" type='primary' @click="handleEdit(scope.row.id)">
                            <i class="el-icon-edit mini"></i> 编辑
                        </el-button>
                        <el-button size="mini" type="danger" @click="handleDelete(scope.row.id )">
                            <i class="el-icon-delete"></i> 删除
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>
        </div>
        <div class="clearfix">
            <template>
                <el-pagination class="margin-top-20 text-right" @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="_pageSizes" :page-size="_pageSize" layout="total, sizes, prev, pager, next , jumper" :total="total">
                </el-pagination>
            </template>
        </div>
        <IndexEdit :dialogStatus="dialog" :FromLabelWidth='FromLabelWidth' :cjid="cjid" @CB-dialogStatus="CB_dialogStatus"></IndexEdit>
        <IndexUpload :dialogUpload="dialogUpload" :FromLabelWidth='FromLabelWidth' @CB-dialogUpload="CB_dialogUpload"></IndexUpload>
    </el-card>
</template>
<script>
import IndexEdit from '@/page/chengji/index_edit'
import IndexUpload from '@/page/chengji/index_upload'
export default {
    activated: function() {
        this._order = "xh"
        this._sort = "asc"
            // this.getData();
    },
    data() {
        return {
            total: 0,
            loading: false,
            currentPage: 1,
            keys: '',
            tableData: [],
            //定义下拉菜单的模型
            nianji: 2013,
            kc_class_id: '',
            kequn: '',
            xk_class_id: '',
            multipleSelection: [],
            isHidden: true,
            //及格
            arrjige: [{
                label: '优',
                value: 6
            }, {
                label: '良',
                value: 5
            }, {
                label: "中",
                value: 4
            }, {
                label: "及格",
                value: 3
            }, {
                label: "不及格",
                value: 2
            }, {
                label: '无成绩',
                value: 1
            }],
            searchJige: "",
            dialog: false,
            cjid: '',
            dialogUpload: false,
            FromLabelWidth: "100px",
            _order: '',
            _sort: ''
        }

    },
    // 监听事件
    watch: {
        // 监听“keys”数据模型变化，当值发生改变时，重新获取一次数据
        'keys': function(newValue, oldValue) {
            this.keys = newValue;
            this.getData();
        },
    },
    methods: {
        //排序
        handleSort(val) {
            if (val.prop == null || !val.prop) {
                this._order = "xh"
                this._sort = "asc"
            } else {
                this._order = val.prop
                if (val.order == "ascending") {
                    this._sort = "asc"
                } else if (val.order == "descending") {
                    this._sort = "desc"
                }
            }
            this.getData()
        },
        //当年级下拉菜单值发生改变时，回调此方法
        selectNianji(val) {
            this.nianji = val;
            this.getData();
        },
        //当专业课群下拉菜单值发生改变时，回调此方法
        selectKequn(val) {
            this.kequn = val;
            this.getData()
        },
        //当修课类型菜单值发生改变时，回调此方法
        selectXiuke(val) {
            this.xk_class_id = val;
            this.getData();
        },
        //选择是否及格
        selectJige(val) {
            this.searchJige = val;
            this.getData();
        },
        //多选框
        handleSelectionChange(val) {
            this.multipleSelection = val;
        },
        //编辑
        handleEdit(id) {
            this.cjid = id
            this.dialog = true
        },
        //导入成绩
        setData() {
            this.dialogUpload = true;
        },
        //删除数据记录
        handleDelete(id) {
            return
            this.$confirm('此操作将不可恢复，是否确认删除？', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
            }).then(() => {
                this.delectdata();
            }).catch(() => {

            })
        },
        //批量删除
        SelectDelete() {
            if (this.multipleSelection.length == 0) {
                this.$message.error('请选择要删除的数据');
                return
            }
            this.$confirm('此操作将不可恢复，是否确认删除？', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
            }).then(() => {
                return
                //批量删除的数据
                for (var i = 0; i < this.multipleSelection.length; i++) {
                    this.multipleSelection[i] = this.multipleSelection[i].id;
                }
                var id = this.multipleSelection.join(",");
                this.delectdata();
            }).catch(() => {

            })
        },
        //当页码发生改变
        handleCurrentChange(val) {
            this.currentPage = val;
            this.getData();
        },
        //当一页显示多少条发生改变
        handleSizeChange(val) {
            this.$store.commit("setPageSize", val);
            this.getData();
        },
        getData() {
            this.loading = true
                //有的字段有问题
                // 跨域请求，注意此处的跨域接口主域名在config/index.js配置
            this.$http.post(this.API_ROOT + '/api/chengji', {
                _order: this._order,
                _sort: this._sort,
                //第几页
                page: this.currentPage,
                //显示几条
                listRows: this._pageSize,
                //检索
                keys: this.keys,
                //修课类型
                kc_type: this.xk_class_id,
                //专业课群
                kequn: this.kequn,
                //年级
                pyjh: this.nianji,
                //成绩
                cj: this.searchJige
            }, this.$store.getters.Request_Head).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title);
                } else {
                    this.tableData = response.data.data;
                    this.total = response.data.count;
                };
                this.loading = false
            }, (error) => {
                this.$emit('API_ERR');
                this.loading = false
            });
        },
        //显示/隐藏更多检索条件
        SearchMore() {
            if (this.isHidden) {
                this.isHidden = false;
                $('#search').html('<i class="el-icon-arrow-up"></i>')
            } else {
                this.isHidden = true;
                $('#search').html('<i class="el-icon-arrow-down"></i>')
            }
        },
        //传编辑界面
        CB_dialogStatus(val) {
            this.dialog = false;
        },
        //传导入成绩界面
        CB_dialogUpload() {
            this.dialogUpload = false;
        },
        delectdata() {
            this.$http.post(this.API_ROOT + '/api/log/delete', {
                id: id
            }, this.$store.getters.Request_Head).then((response) => {
                if (response.data.status.code !== 1001) {
                    this.$message.error(response.data.data ? response.data.data : response.data.status.title)
                } else {
                    this.$message({
                        message: '数据删除成功！',
                        type: 'success'
                    });
                    this.getData()
                }
                this.loading = false
            }, (error) => {
                this.loading = false
                this.$emit('API-ERR')
            })
        }
    },
    computed: {
        //定义“computed”属性，当store中的相应值变动时，当前页面中在此处定义的所有变量将自动更新
        _pageSize: function() {
            return this.$store.state.pageSize
        },
        _pageSizes: function() {
            return this.$store.state.pageSizes
        },
        //专业课群
        kequn_data: function() {
            return this.$store.state.kequnfangxiang
        },
        //休课类型
        xk_class_data: function() {
            return this.$store.state.kechengType
        },
        //学生年级
        nianji_data: function() {
            return this.$store.state.nianjiList
        }
    },
    components: {
        IndexEdit,
        IndexUpload
    }
}
</script>
